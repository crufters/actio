name: End-to-end tests (Playwright)
on: [push]

jobs:
  e2e-run:
    runs-on: ubuntu-latest
    if: false
    steps:
      - run: sudo apt-get install -y netcat
      - run: npm install -g wait-on

      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: "16"

        # taken from backend-tests.yaml
      - name: Set up and run backend
        run: |
          cd backend
          docker-compose up --detach
          npm install
          printf "CONNECTION_NAME=$CONNECTION_NAME\n" > .env
          printf "SQL_USER=$SQL_USER\n" >> .env
          printf "SQL_PASSWORD=$SQL_PASSWORD\n" >> .env
          printf "SQL_NAME=$SQL_NAME\n" >> .env
          cat .env
          bash start-local.sh &
          # do not delete this line below even if the wait is repeated. above command must end with &
          # otherwise it will block forever
          wait-on -t 30000 tcp:localhost:8080

      - name: Run the angular app
        run: |
          npm i -g @angular/cli
          npm install --legacy-peer-deps
          ng serve &
          wait-on -t 20000 tcp:localhost:4200

      - name: Run the playwright tests
        env:
          CI: true
        run: |
          npx playwright test --workers=4
